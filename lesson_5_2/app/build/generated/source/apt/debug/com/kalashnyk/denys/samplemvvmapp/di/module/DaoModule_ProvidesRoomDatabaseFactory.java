// Generated by Dagger (https://google.github.io/dagger).
package com.kalashnyk.denys.samplemvvmapp.di.module;

import com.kalashnyk.denys.samplemvvmapp.repository.database.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DaoModule_ProvidesRoomDatabaseFactory implements Factory<AppDatabase> {
  private final DaoModule module;

  public DaoModule_ProvidesRoomDatabaseFactory(DaoModule module) {
    this.module = module;
  }

  @Override
  public AppDatabase get() {
    return Preconditions.checkNotNull(
        module.providesRoomDatabase(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static DaoModule_ProvidesRoomDatabaseFactory create(DaoModule module) {
    return new DaoModule_ProvidesRoomDatabaseFactory(module);
  }

  public static AppDatabase proxyProvidesRoomDatabase(DaoModule instance) {
    return Preconditions.checkNotNull(
        instance.providesRoomDatabase(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
