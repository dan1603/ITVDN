// Generated by Dagger (https://google.github.io/dagger).
package com.kalashnyk.denys.samplemvvmapp.di.component;

import com.kalashnyk.denys.samplemvvmapp.di.module.DaoModule;
import com.kalashnyk.denys.samplemvvmapp.di.module.DaoModule_ProvidesProductDaoFactory;
import com.kalashnyk.denys.samplemvvmapp.di.module.DaoModule_ProvidesRoomDatabaseFactory;
import com.kalashnyk.denys.samplemvvmapp.repository.database.dao.UserDao;
import dagger.internal.Preconditions;

public final class DaggerDaoComponent implements DaoComponent {
  private DaoModule daoModule;

  private DaggerDaoComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.daoModule = builder.daoModule;
  }

  @Override
  public UserDao getUserDao() {
    return DaoModule_ProvidesProductDaoFactory.proxyProvidesProductDao(
        daoModule, DaoModule_ProvidesRoomDatabaseFactory.proxyProvidesRoomDatabase(daoModule));
  }

  public static final class Builder {
    private DaoModule daoModule;

    private Builder() {}

    public DaoComponent build() {
      if (daoModule == null) {
        throw new IllegalStateException(DaoModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerDaoComponent(this);
    }

    public Builder daoModule(DaoModule daoModule) {
      this.daoModule = Preconditions.checkNotNull(daoModule);
      return this;
    }
  }
}
