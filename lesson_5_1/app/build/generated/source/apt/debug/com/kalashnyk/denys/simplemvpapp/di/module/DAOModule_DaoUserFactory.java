// Generated by Dagger (https://google.github.io/dagger).
package com.kalashnyk.denys.simplemvpapp.di.module;

import com.kalashnyk.denys.simplemvpapp.data.database.UserDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DAOModule_DaoUserFactory implements Factory<UserDao> {
  private final DAOModule module;

  public DAOModule_DaoUserFactory(DAOModule module) {
    this.module = module;
  }

  @Override
  public UserDao get() {
    return Preconditions.checkNotNull(
        module.daoUser(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static DAOModule_DaoUserFactory create(DAOModule module) {
    return new DAOModule_DaoUserFactory(module);
  }

  public static UserDao proxyDaoUser(DAOModule instance) {
    return Preconditions.checkNotNull(
        instance.daoUser(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
