// Generated by Dagger (https://google.github.io/dagger).
package com.kalashnyk.denys.simplemvpapp.di.component;

import com.kalashnyk.denys.simplemvpapp.data.database.UserDao;
import com.kalashnyk.denys.simplemvpapp.di.module.DAOModule;
import com.kalashnyk.denys.simplemvpapp.di.module.DAOModule_DaoUserFactory;
import dagger.internal.Preconditions;

public final class DaggerDAOComponent implements DAOComponent {
  private DAOModule dAOModule;

  private DaggerDAOComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  public static DAOComponent create() {
    return new Builder().build();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.dAOModule = builder.dAOModule;
  }

  @Override
  public UserDao getUserDAO() {
    return DAOModule_DaoUserFactory.proxyDaoUser(dAOModule);
  }

  public static final class Builder {
    private DAOModule dAOModule;

    private Builder() {}

    public DAOComponent build() {
      if (dAOModule == null) {
        this.dAOModule = new DAOModule();
      }
      return new DaggerDAOComponent(this);
    }

    public Builder dAOModule(DAOModule dAOModule) {
      this.dAOModule = Preconditions.checkNotNull(dAOModule);
      return this;
    }
  }
}
